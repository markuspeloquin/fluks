fluks, 'free LUKS', is my unencumbered and nicer (than cryptsetup)
implementation of the LUKS (Linux Unified Key Setup) standard for disk
cryptography. Basically, a header is written to disk that includes the private
key in encrypted form, which is used to read/write from the disk. The private
key can be encrypted by multiple passphrases, allowing for (1) easy to
remember passphrases and (2) the ability to add, revoke, or change the allowed
passphrases.

A better place to find build/usage information:
http://wiki.github.com/markuspeloquin/fluks

Markus Peloquin <markus@cs.wisc.edu>

========================================

BUILDING

    Dependencies:
	GCC 5 or Clang 3.4
	CMake 3
	libdevmapper (Device-mapper)
	Boost 1.35
	OpenSSL/LibreSSL
	Linux headers (/usr/include/linux)

    In Ubuntu (ugh), it's at least:
	- libboost-dev libboost-filesystem-dev libboost-program-options-dev
	  libboost-system-dev libdevmapper-dev libssl-dev libudev-dev

    If you would like a dynamically-linked binary, edit the 'static_linking'
    variable in CMakeLists.txt. By default, an entirely statically-linked
    binary is produced to ensure you can't break it by updating boost or
    something.

    Now build:
        % mkdir build && cd build
	% cmake -DCMAKE_BUILD_TYPE=Release ..
	% make -j9

INSTALLING

	# cp fluks /usr/local/sbin/
